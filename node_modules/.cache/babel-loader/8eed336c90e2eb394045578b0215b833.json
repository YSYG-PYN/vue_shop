{"remainingRequest":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\babel-loader\\lib\\index.js!E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\src\\components\\user\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\src\\components\\user\\Users.vue","mtime":1592990392216},{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\"/\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card>\r\n            <!-- 搜索与添加区域 -->\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"9\">\r\n                    <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\r\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 用户列表区域 -->\r\n            <el-table :data=\"userlist\" border stripe>\r\n                <el-table-column type=\"index\"></el-table-column>\r\n                <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\r\n                <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\r\n                <el-table-column label=\"电话\" prop=\"mobile\"></el-table-column>\r\n                <el-table-column label=\"角色\" prop=\"role_name\"></el-table-column>\r\n                <el-table-column label=\"状态\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- scope.row代表当前行所有的数据 -->\r\n                        <el-switch\r\n                                v-model=\"scope.row.mg_state\"\r\n                                @change=\"userStateChanged(scope.row)\"\r\n                        >\r\n                        </el-switch>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\" width=\"180px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\r\n                                   @click=\"showEditDialog(scope.row.id)\"></el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                                   @click=\"removeUserById(scope.row.id)\"></el-button>\r\n                        <!-- 分配角色按钮 -->\r\n                        <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n                            <el-button @click=\"setRole(scope.row)\" type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\r\n                        </el-tooltip>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <!-- 分页区域 -->\r\n            <el-pagination\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"queryInfo.pagenum\"\r\n                    :page-sizes=\"[1, 2, 5, 10]\"\r\n                    :page-size=\"queryInfo.pagesize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\">\r\n            </el-pagination>\r\n        </el-card>\r\n\r\n        <!-- 添加用户的对话框 -->\r\n        <el-dialog\r\n                title=\"添加用户\"\r\n                :visible.sync=\"addDialogVisible\"\r\n                width=\"50%\"\r\n                @close=\"addDialogClosed\"\r\n        >\r\n            <!-- 内容主题区域 -->\r\n            <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"addForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input v-model=\"addForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"addForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机\" prop=\"mobile\">\r\n                    <el-input v-model=\"addForm.mobile\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <!-- 底部区域 -->\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 修改用户的对话框 -->\r\n        <el-dialog\r\n                title=\"修改用户\"\r\n                :visible.sync=\"editDialogVisible\"\r\n                width=\"50%\"\r\n                @close=\"editDialogClosed\"\r\n        >\r\n            <!-- 内容主题区域 -->\r\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\">\r\n                    <el-input v-model=\"editForm.username\" disabled></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"editForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机\" prop=\"mobile\">\r\n                    <el-input v-model=\"editForm.mobile\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 分配角色的对话框 -->\r\n        <el-dialog\r\n                title=\"分配角色\"\r\n                :visible.sync=\"setRoleDialogVisible\"\r\n                width=\"50%\">\r\n            <div>\r\n                <p>当前的用户：{{userInfo.username}}</p>\r\n                <P>当前的角色：{{userInfo.role_name}}</P>\r\n            </div>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button @click=\"setRoleDialogVisible = false\">取 消</el-button>\r\n              <el-button type=\"primary\" @click=\"setRoleDialogVisible = false\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Users',\r\n  data () {\r\n    // 验证邮箱的规则\r\n    const checkEmail = (rule, value, callback) => {\r\n      // 验证邮箱的正则表达式\r\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n\r\n      if (regEmail.test(value)) {\r\n        // 合法邮箱\r\n        return callback()\r\n      }\r\n\r\n      callback(new Error('请输入合法的邮箱'))\r\n    }\r\n\r\n    // 验证手机号的规则\r\n    const checkMobile = (rule, value, callback) => {\r\n      // 验证手机号的正则表达式\r\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[0123456789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\r\n\r\n      if (regMobile.test(value)) {\r\n        return callback()\r\n      }\r\n\r\n      callback(new Error('请输入合法的手机号'))\r\n    }\r\n\r\n    return {\r\n      //  获取用户列表的参数对象\r\n      queryInfo: {\r\n        query: '',\r\n        // 当前的页数\r\n        pagenum: 1,\r\n        // 当前每页多少条数据\r\n        pagesize: 2\r\n      },\r\n      userlist: [],\r\n      total: 0,\r\n      // 控制添加用户对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 添加用户的表单数据\r\n      addForm: {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        mobile: ''\r\n      },\r\n      // 添加表单的验证规则对象\r\n      addFormRules: {\r\n        username: [\r\n          {\r\n            required: true,\r\n            message: '请输入用户名',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 3,\r\n            max: 10,\r\n            message: '用户名的长度在1~10个字符之间',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            required: true,\r\n            message: '请输入密码',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 6,\r\n            max: 15,\r\n            message: '用户名的长度在6~15个字符之间',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        email: [\r\n          {\r\n            required: true,\r\n            message: '请输入邮箱',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: checkEmail,\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        mobile: [\r\n          {\r\n            required: true,\r\n            message: '请输入手机',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: checkMobile,\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      // 控制修改用户对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 查询到的用户信息对象保存\r\n      editForm: {},\r\n      // 修改表单的验证规则对象\r\n      editFormRules: {\r\n        email: [\r\n          {\r\n            required: true,\r\n            message: '请输入用户邮箱',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: checkEmail,\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        mobile: [\r\n          {\r\n            required: true,\r\n            message: '请输入用户手机',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: checkMobile,\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      // 控制分配角色对话框的显示与隐藏\r\n      setRoleDialogVisible: false,\r\n      // 需要被分配橘色的用户信息\r\n      userInfo: {}\r\n    }\r\n  },\r\n  created () {\r\n    this.getUserList()\r\n  },\r\n  methods: {\r\n    async getUserList () {\r\n      const { data: res } = await this.$http.get('users', { params: this.queryInfo })\r\n      if (res.meta.status !== 200) return this.$message.error('获取用户列表失败')\r\n      this.userlist = res.data.users\r\n      this.total = res.data.total\r\n      console.log(res)\r\n    },\r\n    // 监听pagesize的改变事件\r\n    handleSizeChange (newSize) {\r\n      console.log(newSize)\r\n      this.queryInfo.pagesize = newSize\r\n      this.getUserList()\r\n    },\r\n    // 监听页码值改变的事件\r\n    handleCurrentChange (newPage) {\r\n      console.log(newPage)\r\n      this.queryInfo.pagenum = newPage\r\n      this.getUserList()\r\n    },\r\n    // 监听 switch 开关状态的改变\r\n    async userStateChanged (userinfo) {\r\n      console.log(userinfo)\r\n      const { data: res } = await this.$http.put(`users/${userinfo.id}/state/${userinfo.mg_state}`)\r\n      if (res.meta.status !== 200) {\r\n        userinfo.mg_state = !userinfo.mg_state\r\n        return this.$message.error('更新用户状态失败')\r\n      }\r\n      this.$message.success('更新用户状态成功！')\r\n    },\r\n    // 监听添加用户对话框的关闭事件\r\n    addDialogClosed () {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 点击按钮添加新用户\r\n    addUser () {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) return valid\r\n        // 可以发起添加用户的网络请求\r\n        const { data: res } = await this.$http.post('users', this.addForm)\r\n        if (res.status !== 201) {\r\n          this.$message.error('添加用户失败')\r\n        }\r\n\r\n        this.$message.success('添加用户成功！')\r\n        // 隐藏添加用户的对话框\r\n        this.addDialogVisible = false\r\n        // 重新获取用户列表数据\r\n        this.getUserList()\r\n      })\r\n    },\r\n    // 展示编辑用户的对话框\r\n    async showEditDialog (id) {\r\n      this.editDialogVisible = true\r\n      const { data: res } = await this.$http.get('users/' + id)\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('查询用户信息失败')\r\n      }\r\n\r\n      this.editForm = res.data\r\n    },\r\n    // 监听修改用户对话框的关闭事件\r\n    editDialogClosed () {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 修改用户信息并提交\r\n    editUserInfo () {\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        if (!valid) return valid\r\n        // 发起修改用户信息的数据请求\r\n        const { data: res } = await this.$http.put('users/' + this.editForm.id, {\r\n          email: this.editForm.email,\r\n          mobile: this.editForm.mobile\r\n        })\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('更新用户信息失败！')\r\n        }\r\n        // 关闭对话\r\n        this.editDialogVisible = false\r\n        // 更新数据列表\r\n        this.getUserList()\r\n        // 提示修改成功\r\n        this.$message.success('更新用户信息成功')\r\n      })\r\n    },\r\n    // 根据id删除对应的用户信息\r\n    async removeUserById (id) {\r\n      // 弹框 询问用户是否删除数据\r\n      const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n\r\n      // 如果用户确认删除，则返回值为字符串 confirm\r\n      // 如果用户取消了删除，则返回则为字符串 cancel\r\n      // console.log(confirmResult)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n\r\n      const { data: res } = await this.$http.delete('users/' + id)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('删除用户失败！')\r\n      }\r\n\r\n      this.$message.success('删除用户成功！')\r\n      this.getUserList()\r\n    },\r\n    // 展示分配角色的对话框\r\n    setRole (userInfo) {\r\n      this.userInfo = userInfo\r\n      this.setRoleDialogVisible = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/user"}]}