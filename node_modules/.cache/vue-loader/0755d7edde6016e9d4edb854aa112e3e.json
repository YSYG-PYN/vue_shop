{"remainingRequest":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\src\\components\\user\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\src\\components\\user\\Users.vue","mtime":1591889049162},{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\学习仓库\\vue_shop\\demoDD\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator=\"/\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card>\r\n            <!-- 搜索与添加区域 -->\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"9\">\r\n                    <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\r\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 用户列表区域 -->\r\n            <el-table :data=\"userlist\" border stripe>\r\n                <el-table-column type=\"index\"></el-table-column>\r\n                <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\r\n                <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\r\n                <el-table-column label=\"电话\" prop=\"mobile\"></el-table-column>\r\n                <el-table-column label=\"角色\" prop=\"role_name\"></el-table-column>\r\n                <el-table-column label=\"状态\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- scope.row代表当前行所有的数据 -->\r\n                        <el-switch\r\n                                v-model=\"scope.row.mg_state\"\r\n                                @change=\"userStateChanged(scope.row)\"\r\n                        >\r\n                        </el-switch>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\" width=\"180px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\r\n                                   @click=\"showEditDialog(scope.row.id)\"></el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                                   @click=\"removeUserById(scope.row.id)\"></el-button>\r\n                        <!-- 分配角色按钮 -->\r\n                        <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n                            <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\r\n                        </el-tooltip>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <!-- 分页区域 -->\r\n            <el-pagination\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"queryInfo.pagenum\"\r\n                    :page-sizes=\"[1, 2, 5, 10]\"\r\n                    :page-size=\"queryInfo.pagesize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\">\r\n            </el-pagination>\r\n        </el-card>\r\n\r\n        <!-- 添加用户的对话框 -->\r\n        <el-dialog\r\n                title=\"添加用户\"\r\n                :visible.sync=\"addDialogVisible\"\r\n                width=\"50%\"\r\n                @close=\"addDialogClosed\"\r\n        >\r\n            <!-- 内容主题区域 -->\r\n            <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"addForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"password\">\r\n                    <el-input v-model=\"addForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"addForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机\" prop=\"mobile\">\r\n                    <el-input v-model=\"addForm.mobile\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <!-- 底部区域 -->\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 修改用户的对话框 -->\r\n        <el-dialog\r\n                title=\"修改用户\"\r\n                :visible.sync=\"editDialogVisible\"\r\n                width=\"50%\"\r\n                @close=\"editDialogClosed\"\r\n        >\r\n            <!-- 内容主题区域 -->\r\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\">\r\n                    <el-input v-model=\"editForm.username\" disabled></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"editForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机\" prop=\"mobile\">\r\n                    <el-input v-model=\"editForm.mobile\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Users',\r\n  data () {\r\n    // 验证邮箱的规则\r\n    const checkEmail = (rule, value, callback) => {\r\n      // 验证邮箱的正则表达式\r\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n\r\n      if (regEmail.test(value)) {\r\n        // 合法邮箱\r\n        return callback()\r\n      }\r\n\r\n      callback(new Error('请输入合法的邮箱'))\r\n    }\r\n\r\n    // 验证手机号的规则\r\n    const checkMobile = (rule, value, callback) => {\r\n      // 验证手机号的正则表达式\r\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[0123456789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\r\n\r\n      if (regMobile.test(value)) {\r\n        return callback()\r\n      }\r\n\r\n      callback(new Error('请输入合法的手机号'))\r\n    }\r\n\r\n    return {\r\n      //  获取用户列表的参数对象\r\n      queryInfo: {\r\n        query: '',\r\n        // 当前的页数\r\n        pagenum: 1,\r\n        // 当前每页多少条数据\r\n        pagesize: 2\r\n      },\r\n      userlist: [],\r\n      total: 0,\r\n      // 控制添加用户对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 添加用户的表单数据\r\n      addForm: {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        mobile: ''\r\n      },\r\n      // 添加表单的验证规则对象\r\n      addFormRules: {\r\n        username: [\r\n          {\r\n            required: true,\r\n            message: '请输入用户名',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 3,\r\n            max: 10,\r\n            message: '用户名的长度在1~10个字符之间',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            required: true,\r\n            message: '请输入密码',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            min: 6,\r\n            max: 15,\r\n            message: '用户名的长度在6~15个字符之间',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        email: [\r\n          {\r\n            required: true,\r\n            message: '请输入邮箱',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: checkEmail,\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        mobile: [\r\n          {\r\n            required: true,\r\n            message: '请输入手机',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: checkMobile,\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      // 控制修改用户对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 查询到的用户信息对象保存\r\n      editForm: {},\r\n      // 修改表单的验证规则对象\r\n      editFormRules: {\r\n        email: [\r\n          {\r\n            required: true,\r\n            message: '请输入用户邮箱',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: checkEmail,\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        mobile: [\r\n          {\r\n            required: true,\r\n            message: '请输入用户手机',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            validator: checkMobile,\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    this.getUserList()\r\n  },\r\n  methods: {\r\n    async getUserList () {\r\n      const { data: res } = await this.$http.get('users', { params: this.queryInfo })\r\n      if (res.meta.status !== 200) return this.$message.error('获取用户列表失败')\r\n      this.userlist = res.data.users\r\n      this.total = res.data.total\r\n      console.log(res)\r\n    },\r\n    // 监听pagesize的改变事件\r\n    handleSizeChange (newSize) {\r\n      console.log(newSize)\r\n      this.queryInfo.pagesize = newSize\r\n      this.getUserList()\r\n    },\r\n    // 监听页码值改变的事件\r\n    handleCurrentChange (newPage) {\r\n      console.log(newPage)\r\n      this.queryInfo.pagenum = newPage\r\n      this.getUserList()\r\n    },\r\n    // 监听 switch 开关状态的改变\r\n    async userStateChanged (userinfo) {\r\n      console.log(userinfo)\r\n      const { data: res } = await this.$http.put(`users/${userinfo.id}/state/${userinfo.mg_state}`)\r\n      if (res.meta.status !== 200) {\r\n        userinfo.mg_state = !userinfo.mg_state\r\n        return this.$message.error('更新用户状态失败')\r\n      }\r\n      this.$message.success('更新用户状态成功！')\r\n    },\r\n    // 监听添加用户对话框的关闭事件\r\n    addDialogClosed () {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 点击按钮添加新用户\r\n    addUser () {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) return valid\r\n        // 可以发起添加用户的网络请求\r\n        const { data: res } = await this.$http.post('users', this.addForm)\r\n        if (res.status !== 201) {\r\n          this.$message.error('添加用户失败')\r\n        }\r\n\r\n        this.$message.success('添加用户成功！')\r\n        // 隐藏添加用户的对话框\r\n        this.addDialogVisible = false\r\n        // 重新获取用户列表数据\r\n        this.getUserList()\r\n      })\r\n    },\r\n    // 展示编辑用户的对话框\r\n    async showEditDialog (id) {\r\n      this.editDialogVisible = true\r\n      const { data: res } = await this.$http.get('users/' + id)\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('查询用户信息失败')\r\n      }\r\n\r\n      this.editForm = res.data\r\n    },\r\n    // 监听修改用户对话框的关闭事件\r\n    editDialogClosed () {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 修改用户信息并提交\r\n    editUserInfo () {\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        if (!valid) return valid\r\n        // 发起修改用户信息的数据请求\r\n        const { data: res } = await this.$http.put('users/' + this.editForm.id, {\r\n          email: this.editForm.email,\r\n          mobile: this.editForm.mobile\r\n        })\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('更新用户信息失败！')\r\n        }\r\n        // 关闭对话\r\n        this.editDialogVisible = false\r\n        // 更新数据列表\r\n        this.getUserList()\r\n        // 提示修改成功\r\n        this.$message.success('更新用户信息成功')\r\n      })\r\n    },\r\n    // 根据id删除对应的用户信息\r\n    async removeUserById (id) {\r\n      // 弹框 询问用户是否删除数据\r\n      const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n\r\n      // 如果用户确认删除，则返回值为字符串 confirm\r\n      // 如果用户取消了删除，则返回则为字符串 cancel\r\n      // console.log(confirmResult)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n\r\n      const { data: res } = await this.$http.delete('users/' + id)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('删除用户失败！')\r\n      }\r\n\r\n      this.$message.success('删除用户成功！')\r\n      this.getUserList()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"]}]}